##############################################
### Concourse Objects
##############################################
# github RSA private key for git resources
githubtoken: CHANGEME

##############################################
### PCF Object Params
##############################################
pcf_iaas: "azure"
opsman_major_minor_version: '1\.11\..*' # Reqd
ert_major_minor_version: '1\.11\..*' # Reqd

# Pivent Download token
pcf_pivnet_token: CHANGEME

# ERT Domain Name
pcf_ert_domain: CHANGEME # This is the domain you will access ERT with
pcf_ssh_key_pub: CHANGEME
pcf_ssh_key_priv: |
  CHANGEME

# Opsman Settings
opsman_uri: CHANGEME # This should be your pcf_ert_domain with "opsman." as a prefix
pcf_opsman_admin_username: CHANGEME
pcf_opsman_admin_password: CHANGEME

# ERT Cert & Key , if the string 'generate' is passed, pipeline will autogen certs
pcf_ert_networking_pointofentry: "haproxy" #This is set to HAProxy for now as Azure load balancer does not support external SSL termination now. If Azure adds suport for that, you may change it to a different value in future.
pcf_ert_ssl_cert: |
  CHANGEME
pcf_ert_ssl_key: CHANGEME

# SAML Service Credential provider Cert and Key, of the string generate is passed, pipeline will autogen certs
pcf_ert_saml_cert: generate
pcf_ert_saml_key: generate

##############################################
### IaaS Specific Params
##############################################
# Wipe Arg(s) anything other than wipe bypasses the wipe-env job
arg_wipe: wipe

# The storage account and container that will be used for your terraform state
terraform_azure_account_name: CHANGEME
terraform_azure_access_key: CHANGEME
terraform_statefile_container: CHANGEME

### azure ###
# IF the azure_access_name is empty "", ERT will use internal storage. If you want ERT to use Azure blob store, provide a valid azure_account_name and azure_account_key values.
azure_account_name:

# Retrieve the value of Primary access key of the Azure Storage account which ends with the value corresponding to the above parameter azure_account_name and 
# assign it to the azure_access_key after the Deploy IaaS job in the Concourse pipeline, then do a fly to apply changes.
azure_access_key:

# REQD if Azure blob storage is used as external storage by ERT, which is determined by azure_access_name being not null. This setting is used to specify the container where the buildpacks will be stored. It is similar to the S3 bucket in AWS.
azure_buildpacks_container:

# REQD if Azure blob storage is used as external storage by ERT, which is determined by azure_access_name being not null. This setting is used to specify the container where the droplets will be stored. It is similar to the S3 bucket in AWS.
azure_droplets_container:

# REQD if Azure blob storage is used as external storage by ERT, which is determined by azure_access_name being not null. This setting is used to specify the container where the packages will be stored. It is similar to the S3 bucket in AWS.
azure_packages_container:

# REQD if Azure blob storage is used as external storage by ERT, which is determined by azure_access_name being not null. This setting is used to specify the container where the resources will be stored. It is similar to the S3 bucket in AWS.
azure_resources_container:

azure_pcf_terraform_template: c0-azure-base # 'Template' for pipeline to determine Terrafrom & Opsman JSON config
azure_region:
azure_service_principal_id:
azure_service_principal_password:
azure_subscription_id:
azure_tenant_id:
azure_terraform_prefix:
azure_terraform_subnet_dynamic_services_cidr: "192.168.12.0/22"
azure_terraform_subnet_dynamic_services_dns: "168.63.129.16,8.8.8.8"
azure_terraform_subnet_dynamic_services_gateway: "192.168.12.1"
azure_terraform_subnet_dynamic_services_reserved: "192.168.12.1-192.168.12.9"
azure_terraform_subnet_ert_cidr: "192.168.4.0/22"
azure_terraform_subnet_ert_dns: "168.63.129.16,8.8.8.8"
azure_terraform_subnet_ert_gateway: "192.168.4.1"
azure_terraform_subnet_ert_reserved: "192.168.4.1-192.168.4.9"
azure_terraform_subnet_infra_cidr: "192.168.0.0/26"
azure_terraform_subnet_infra_dns: "168.63.129.16,8.8.8.8"
azure_terraform_subnet_infra_gateway: "192.168.0.1"
azure_terraform_subnet_infra_reserved: "192.168.0.1-192.168.0.9"
azure_terraform_subnet_services1_cidr: "192.168.8.0/22"
azure_terraform_subnet_services1_dns: "168.63.129.16,8.8.8.8"
azure_terraform_subnet_services1_gateway: "192.168.8.1"
azure_terraform_subnet_services1_reserved: "192.168.8.1-192.168.8.9"
azure_terraform_vnet_cidr: "192.168.0.0/20"

# azure_vm_admin value should match with userid used to create the certs pcf_ssh_key_pub. The userid will appear towards the end of the pub key
azure_vm_admin: CHANGEME
azure_vm_password:

mysql_monitor_recipient_email:  # Email address for sending mysql monitor notifications
mysql_backups: disable   # Whether to enable MySQL backups. (disable|s3|scp)

#SCP backup config params (leave empty values if you're not using scp
mysql_backups_scp_server:
mysql_backups_scp_port:
mysql_backups_scp_user:
mysql_backups_scp_key:
mysql_backups_scp_destination:
mysql_backups_scp_cron_schedule:

#S3 backup config params (leave empty values if you're not using s3)
mysql_backups_s3_endpoint_url:
mysql_backups_s3_bucket_name:
mysql_backups_s3_bucket_path:
mysql_backups_s3_access_key_id:
mysql_backups_s3_secret_access_key:
mysql_backups_s3_cron_schedule:

# DB Creds
db_diego_username: CHANGEME
db_diego_password: CHANGEME
db_notifications_username: CHANGEME
db_notifications_password: CHANGEME
db_autoscale_username: CHANGEME
db_autoscale_password: CHANGEME
db_uaa_username: CHANGEME
db_uaa_password: CHANGEME
db_app_usage_service_username: CHANGEME
db_app_usage_service_password: CHANGEME
db_ccdb_username: CHANGEME
db_ccdb_password: CHANGEME
db_routing_username: CHANGEME
db_routing_password: CHANGEME

db_accountdb_username: CHANGEME
db_accountdb_password: CHANGEME
db_networkpolicyserverdb_username: CHANGEME
db_networkpolicyserverdb_password: CHANGEME
db_nfsvolumedb_username: CHANGEME
db_nfsvolumedb_password: CHANGEME
db_silk_username: CHANGEME
db_silk_password: CHANGEME
db_locket_username: CHANGEME
db_locket_password: CHANGEME
